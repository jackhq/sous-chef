# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      monitoring
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

define service {
    service_description Munin Client
    hostgroup_name      all
    check_command       check_tcp!4949
    use                 default-service
}

# default checks for all hosts
define service {
    service_description Chef Client
    hostgroup_name      base
    check_command    	  check_chef_client
    use                 default-service
}

define service {
    service_description Free Space All Disks
    hostgroup_name      all
    check_command    		check_all_disks
    use                 default-service
}

define service {
    service_description Load Average
    hostgroup_name      all
    check_command			  check_load
    use                 default-service
}

define service {
    service_description Free Memory
    hostgroup_name      all
    check_command    		check_mem
    use                 default-service
}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

define service {
    service_description Processes
    hostgroup_name      all
    check_command       check_local_procs
    use                 default-service
}

<% unless @service_hosts['monitoring'].nil? -%>
define service {
    service_description Postfix
    hostgroup_name      monitoring
    check_command       check_nrpe!check_smtp
    use                 default-service
}

define service {
    service_description Rsyslog
    hostgroup_name      monitoring
    check_command       check_tcp!514
    use                 default-service
}

<% end -%>
<% unless @service_hosts['load_balancer'].nil? -%>
# load_balancer service checks
define service {
    service_description Nginx LB Processes
    hostgroup_name      load_balancer
    check_command       check_nrpe!check_nginx
    use                 default-service
}

<% end -%>
<% unless @service_hosts['appserver'].nil? -%>
# appserver service checks
define service {
    service_description Unicorn Processes
    hostgroup_name      appserver
    check_command       check_nrpe!check_unicorn
    use                 default-service
}

define service {
    service_description Unicorn HTTP
    hostgroup_name      appserver
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['database_master'].nil? -%>
# database_master service checks
define service {
		service_description MySQL
		hostgroup_name			database_master
		check_command				check_nrpe!check_mysql_server
		use									default-service
}

<% end -%>
