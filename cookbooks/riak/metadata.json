{
    "providing": {
    },
    "attributes": {
      "riak/kv/storage_backend_options/small_file_threshold": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "10485760",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Small file threshold"
      },
      "riak/erlang": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "display_name": "Erlang configuration"
      },
      "riak/package/prefix": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/usr/local",
        "type": "string",
        "recipes": [

        ],
        "description": "Installation prefix for source installs",
        "display_name": "Installation prefix"
      },
      "riak/package/version/major": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "0",
        "type": "string",
        "recipes": [

        ],
        "description": "Major version of Riak to install.",
        "display_name": "Riak major version"
      },
      "riak/kv/pb_ip": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "127.0.0.1",
        "type": "string",
        "recipes": [

        ],
        "description": "The IP address on which Riak's PBC interface should listen",
        "display_name": "Protocol Buffers Client (PBC) address"
      },
      "riak/kv/handoff_concurrency": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [

        ],
        "description": "Number of vnode, per physical node, allowed to perform handoff at once.",
        "display_name": "Handoff concurrency"
      },
      "riak/erlang/cookie": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "riak",
        "type": "string",
        "recipes": [

        ],
        "description": "The cookie of the Erlang node",
        "display_name": "Erlang cookie"
      },
      "riak/kv/pb_port": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "8087",
        "type": "string",
        "recipes": [

        ],
        "description": "The port on which Riak's PBC interface should listen",
        "display_name": " Protocol Buffers Client (PBC) port"
      },
      "riak/kv/riak_kv_stat": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "true",
        "type": "string",
        "recipes": [

        ],
        "description": "Enables the statistics-aggregator if set to true.",
        "display_name": "Statistics reporting"
      },
      "riak/kv/mapred_name": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "mapred",
        "type": "string",
        "recipes": [

        ],
        "description": "The base of the path in the URL exposing Riak's Map/Reduce interface",
        "display_name": "Map/Reduce base path"
      },
      "riak/kv/js_source_dir": {
        "required": "optional",
        "default_name": "Javascript source directory",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [

        ],
        "description": "Where to load user-defined built in Javascript functions"
      },
      "riak/core/web_ip": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "127.0.0.1",
        "type": "string",
        "recipes": [

        ],
        "description": "The IP address on which Riak's HTTP interface should listen (default: 127.0.0.1)",
        "display_name": "HTTP address"
      },
      "riak/erlang/node_name": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "riak@127.0.0.1",
        "type": "string",
        "recipes": [

        ],
        "description": "The name of the Erlang node",
        "display_name": "Erlang node name"
      },
      "riak/kv/storage_backend_options/sync_strategy": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "none",
        "type": "string",
        "recipes": [

        ],
        "description": "Sync strategy is one of: :none (let the OS decide), :o_sync, or {:seconds => N} (which requires application support)",
        "display_name": "Sync strategy"
      },
      "riak/kv/storage_backend_options/data_root": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/riak/bitcask",
        "type": "string",
        "recipes": [

        ],
        "description": "Directory where the data files will be stored.",
        "display_name": "Data root directory"
      },
      "riak/package/kernel/inet_dist_listen_min": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "6000",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Minimum port for Erlang node communication"
      },
      "riak/kv/storage_backend_options/dead_bytes_merge_trigger": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "536870912",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Dead bytes merge trigger"
      },
      "riak/kv/storage_backend_options/frag_merge_trigger": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "60",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Fragment merge trigger"
      },
      "riak/kv/storage_backend_options/riak_kv_dets_backend_root": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/riak/dets",
        "type": "string",
        "recipes": [

        ],
        "description": "Directory where the data files will be stored.",
        "display_name": "Data root directory"
      },
      "riak/kv/storage_backend": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "riak_kv_bitcask_backend",
        "type": "string",
        "recipes": [

        ],
        "description": "The module name of the storage backend that Riak should use.",
        "display_name": "Storage backend"
      },
      "riak/kv/handoff_port": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "8099",
        "type": "string",
        "recipes": [

        ],
        "description": "TCP port number for the handoff listener (default: 8099)",
        "display_name": "Handoff port"
      },
      "riak/kv/raw_name": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "riak",
        "type": "string",
        "recipes": [

        ],
        "description": "The base of the path in the URL exposing Riak's HTTP interface.",
        "display_name": "HTTP base path"
      },
      "riak/erlang/env_vars": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "[\"ERL_MAX_PORTS 4096\", \"ERL_FULLSWEEP_AFTER 10\"]",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Additional Erlang environment variables"
      },
      "riak/erlang/async_threads": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "5",
        "type": "string",
        "recipes": [

        ],
        "description": "Number of threads in the async thread pool",
        "display_name": "Async thread pool size"
      },
      "riak/package/version/build": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "1344",
        "type": "string",
        "recipes": [

        ],
        "description": "For binary packages, the specific build to use.",
        "display_name": "Riak binary package build version"
      },
      "riak/package": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ]
      },
      "riak/kv/storage_backend_options/data_home_dir": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/riak/innodb",
        "type": "string",
        "recipes": [

        ],
        "description": "Directory where the system files will be created. All database directories will also be created relative to this path.  Note: The path must end in a / or \\ depending on the platform.",
        "display_name": "Data home directory"
      },
      "riak/kv/storage_backend_options/buffer_pool_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "2147483648",
        "type": "string",
        "recipes": [

        ],
        "description": "Size of the buffer pool in bytes.",
        "display_name": "Buffer pool size"
      },
      "riak/kv": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "description": "Riak key/value system configuration",
        "display_name": "Riak key/value"
      },
      "riak/core/web_port": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "8098",
        "type": "string",
        "recipes": [

        ],
        "description": "The port on which Riak's HTTP interface should listen (default: 8098)",
        "display_name": "HTTP port"
      },
      "riak/package/version/incremental": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "0",
        "type": "string",
        "recipes": [

        ],
        "description": "Incremental release of Riak to install.",
        "display_name": "Riak incremental version"
      },
      "riak": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "description": "Riak is a Dynamo-inspired key/value store",
        "display_name": "Riak"
      },
      "riak/kv/storage_backend_options/expiry_secs": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "-1",
        "type": "string",
        "recipes": [

        ],
        "description": "Data expiration can be caused by setting this to a positive value.  If set, items older than the value will be discarded.",
        "display_name": "Data expiration threshold, in seconds"
      },
      "riak/kv/storage_backend_options/log_buffer_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "8388608",
        "type": "string",
        "recipes": [

        ],
        "description": "Size of the in-memory log buffer in bytes.",
        "display_name": "Log buffer size"
      },
      "riak/core/target_n_val": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "3",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Target N"
      },
      "riak/core": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "description": "Riak core system configuration",
        "display_name": "Riak core"
      },
      "riak/kv/storage_backend_options/dead_bytes_threshold": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "134217728",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Dead bytes threshold"
      },
      "riak/kv/storage_backend_options": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "hash",
        "type": "string",
        "recipes": [

        ],
        "description": "Additional configuration options for storage backends (varies by storage_backend)",
        "display_name": "Storage backend options"
      },
      "riak/kv/js_vm_count": {
        "required": "optional",
        "default_name": "Javascript virtual machine count",
        "calculated": false,
        "choice": [

        ],
        "default": "8",
        "type": "string",
        "recipes": [

        ],
        "description": "How many Javascript virtual machines to start (default: 8)"
      },
      "riak/core/ring_state_dir": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/riak/ring",
        "type": "string",
        "recipes": [

        ],
        "description": "The directory on-disk in which to store the ring state (default: data/ring)",
        "display_name": "Ring state directory"
      },
      "riak/core/default_bucket_props": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [

        ],
        "display_name": "Default bucket properties"
      },
      "riak/kv/storage_backend_options/flush_log_at_trx_commit": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "1",
        "type": "string",
        "recipes": [

        ],
        "description": "This variable can be set to 0, 1 or 2.\n\n                   0 - Force sync of log contents to disk once every second.\n\n                   1 - Force sync of log contents to disk at transaction commit.\n\n                   2 - Write log contents to disk at transaction commit but do not force sync.\n",
        "display_name": "Log flush policy"
      },
      "riak/kv/storage_backend_options/log_group_home_dir": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/riak/innodb",
        "type": "string",
        "recipes": [

        ],
        "description": "Path to the directory where the log files will be created.",
        "display_name": "Log file path"
      },
      "riak/kv/add_paths": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [

        ],
        "description": "A list of paths to add to the Erlang code path",
        "display_name": "Additional Erlang paths"
      },
      "riak/core/gossip_interval": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "60000",
        "type": "string",
        "recipes": [

        ],
        "description": "Gossip interval in milliseconds",
        "display_name": "Gossip interval"
      },
      "riak/limit_port_range": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "true",
        "type": "string",
        "recipes": [

        ],
        "description": "Boolean indicating whether to limit the range of ports used for Erlang node communication.",
        "display_name": "Limit port range"
      },
      "riak/package/type": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "binary",
        "type": "string",
        "recipes": [

        ],
        "description": "Package type for installation (source or binary)",
        "display_name": "Package type"
      },
      "riak/kv/storage_backend_options/frag_threshold": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "40",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Fragment threshold"
      },
      "riak/core/ring_creation_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "64",
        "type": "string",
        "recipes": [

        ],
        "description": "The number of partitions into which to divide the hash space (default: 64)",
        "display_name": "Ring creation size"
      },
      "riak/core/cluster_name": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "default",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Riak cluster name"
      },
      "riak/erlang/kernel_polling": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "true",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Enable kernel polling"
      },
      "riak/erlang/heart": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "false",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Enable heart node monitoring"
      },
      "riak/package/version/minor": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "11",
        "type": "string",
        "recipes": [

        ],
        "description": "Minor version of Riak to install.",
        "display_name": "Riak minor version"
      },
      "riak/kv/storage_backend_options/max_file_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "2147483648",
        "type": "string",
        "recipes": [

        ],
        "description": "Maximum size for a single Bitcask cask file.",
        "display_name": "Maximum file size"
      },
      "riak/kv/storage_backend_options/log_file_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "268435456",
        "type": "string",
        "recipes": [

        ],
        "description": "Log file size in bytes.",
        "display_name": "Log file size"
      },
      "riak/kv/storage_backend_options/log_files_in_group": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "8",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Log files in group"
      },
      "riak/kv/stats_urlpath": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Path for HTTP retrieval of statistics"
      },
      "riak/package/kernel/inet_dist_listen_max": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "7999",
        "type": "string",
        "recipes": [

        ],
        "display_name": "Maximum port for Erlang node communication"
      }
    },
    "replacing": {
    },
    "dependencies": {
      "iptables": [

      ],
      "mercurial": [

      ],
      "erlang": [

      ]
    },
    "groupings": {
    },
    "recommendations": {
    },
    "platforms": {
      "debian": [

      ],
      "ubuntu": [

      ]
    },
    "license": "Apache 2.0",
    "version": "0.11.0",
    "maintainer": "Basho Technologies, Inc.",
    "suggestions": {
    },
    "recipes": {
      "riak::iptables": "Automatically configure iptables rules for Riak.",
      "riak": "Installs Riak",
      "riak::innostore": "Install and configure the Innostore backend.",
      "riak::autoconf": "Automatically configure nodes from chef-server information."
    },
    "maintainer_email": "riak@basho.com",
    "name": "riak",
    "conflicting": {
    },
    "description": "Installs and configures Riak distributed data store (v0.10 and later)",
    "long_description": ""
  }